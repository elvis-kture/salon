<?php

define('RED_STATUS_TID', 25);
define('DAY_IN_SECONDS', 3600*24);
define('BILL_NODE_TYPE', 'event_calendar');
define('BALANCE_NODE_TYPE', 'balance_check');
define('CLOSE_DAY_NODE_TYPE', 'close_day');
define('GREEN_STATUS_EVENT_TID', 11);
define('NORMAL_STATUS_EVENT_TID', 12);
define('PAY_FORMAT_WITHOUT_CASH_TID', 30);
define('PAY_TYPE_CREDIT_TID', 32);
define('ON_APPROVE_STATUS_EVENT_TID', 35);

function salon_init(){
	global $user;
	if (drupal_is_front_page()) {
		if (!drupal_is_cli()) {
			drupal_goto('masters/today/billing');
		}
	}

	drupal_add_css(drupal_get_path('module', 'salon') .'/salon.css');
	drupal_add_js(drupal_get_path('module', 'salon') .'/salon.js');

	if ($user->uid != 1) {
		drupal_add_css(drupal_get_path('module', 'salon') .'/admin_hide.css');
	}

}

/**
 * Implements hook_form_alter().
 */
function salon_form_alter(&$form, &$form_state, $form_id) {
	if ($form_id == 'event_calendar_node_form') {

		$form['#attributes']['autocomplete'] = 'off';

		if (!$form['title']['#default_value']) {
			$form['title']['#default_value'] = time();
		}
		if ($form['#node']->field_date[LANGUAGE_NONE][0]['value']) {
			$form['title']['#default_value'] = ' ' . t('за !date', array('!date' => $form['#node']->field_date[LANGUAGE_NONE][0]['value']));
		}
		$form['title']['#type'] = 'hidden';

		if (arg(0) == 'node' && arg(1) == 'add' && arg(2) == 'event-calendar') {
			$form['event_calendar_status']['#access'] = FALSE;
		}
		$form['field_salon'][LANGUAGE_NONE]['#options']['_none'] = ' - ' . t('Выбрать адрес') . ' - ';
		if (arg(0) == 'node' && is_numeric(arg(1)) && arg(2) == 'edit') {
			if (!user_access('administer site configuration')) {
				$datetime_array = explode(' ', $form['#node']->field_date[LANGUAGE_NONE][0]['value']);
				$salon_tid = $form['#node']->field_salon[LANGUAGE_NONE][0]['tid'];
				$closed_days = views_get_view_result('all_closed_days', 'block_3', $salon_tid, $datetime_array[0]);
				if ($closed_days) {
					$form['event_calendar_status']['#access'] = FALSE;
				}
				else {
					unset($form['event_calendar_status'][LANGUAGE_NONE]['#options'][GREEN_STATUS_EVENT_TID]);
					unset($form['event_calendar_status'][LANGUAGE_NONE]['#options'][RED_STATUS_TID]);
				}
			}
		}

	}

	if ($form_id == 'close_day_node_form') {

		$form['#attributes']['autocomplete'] = 'off';

		if (!$form['title']['#default_value']) {
			$form['title']['#default_value'] = t('Закрытый день - ' . $_GET['date'] . ' ' . time());
		}

		$form['title']['#type'] = 'hidden';
		if ($_GET['date']) {
			$form['field_date'][LANGUAGE_NONE][0]['#default_value']['value'] = $_GET['date'] . ' 00:00:00';
			$form['field_date'][LANGUAGE_NONE][0]['#default_value']['value2'] = $_GET['date'] . ' 00:00:00';
			$form['field_date'][LANGUAGE_NONE][0]['#date_items']['value'] = $_GET['date'] . ' 00:00:00';
			$form['field_date'][LANGUAGE_NONE][0]['#date_items']['value2'] = $_GET['date'] . ' 00:00:00';
		}

		if ($form['field_date'][LANGUAGE_NONE][0]['#default_value']['value']) {
		}

		$form['field_date']['#access'] = FALSE;
		$form['body']['#type'] = 'hidden';

		if ((int)$_GET['salon']) {
			$form['field_salon'][LANGUAGE_NONE]['#default_value'] = $_GET['salon'];
			$form['field_salon']['#access'] = FALSE;
		}

		$form['actions']['submit']['#value'] = '<span class="icon glyphicon glyphicon-ok" aria-hidden="true"></span>' . t('Закрыть день');
		$form['actions']['submit']['#attributes'] = array('class' => array('btn btn-success form-submit'));
		$form['actions']['contact_information'] = array(
			'#weight' => 11,
			'#attributes' => array('class' => array('btn btn-danger form-submit')),
			'#markup' => '<button id="cancel-popup" type="button" value="Отмена" class="btn btn-danger form-submit"><span class="icon glyphicon" aria-hidden="true"></span>' . t('Отмена') . '</button>',
		);
		$form['actions']['submit']['#submit'][] = '_salon_close_day_node_form_submit';
	}
	if ($form_id == 'balance_check_node_form') {
		$form['field_salon'][LANGUAGE_NONE]['#options']['_none'] = ' - ' . t('Выбрать адрес') . ' - ';
		$form['#validate'][] = 'balance_check_form_validate';
	}
}

function balance_check_form_validate($form, &$form_state){
	$salon_tid = $form_state['values']['field_salon'][LANGUAGE_NONE][0]['tid'];
	$node_balance_nid = get_node_by_field('balance_check', $salon_tid);
	if ($node_balance_nid) {
		form_set_error('field_salon', t('Баланс для этого адреса уже существует. !link', array('!link' => l(t('Ссылка'), 'node/' . $node_balance_nid  . '/edit'))));
	}
}

function _salon_close_day_node_form_submit($form, &$form_state){
	$salon_tid = $form_state['node']->field_salon[LANGUAGE_NONE][0]['tid'];
	$date_array = explode('-', $form_state['node']->field_date[LANGUAGE_NONE][0]['value']);
	$date_string = '/' . $date_array[0] . '-' . $date_array[1];

	$form_state['redirect'] = array('bills/month' . $date_string, array('query' => array('field_salon_tid' => $salon_tid)));
}

function salon_node_insert($node){
	if (
		$node->type == variable_get('bill_node_type', BILL_NODE_TYPE)
		&& $node->field_pay_format[LANGUAGE_NONE]['0']['tid'] == PAY_FORMAT_WITHOUT_CASH_TID
	) {
		$salon_tid = $node->field_salon[LANGUAGE_NONE][0]['tid'];
		$isset_node_balance_nid = get_node_by_field('balance_check', $salon_tid);

		if ($isset_node_balance_nid) {
			$balance_check = node_load($isset_node_balance_nid);
			$balance_amount = (float)$balance_check->field_costs[LANGUAGE_NONE]['0']['value'];
			$check_anount = (float)$node->field_costs[LANGUAGE_NONE]['0']['value'];

			if ($node->field_pay_type[LANGUAGE_NONE]['0']['tid'] == PAY_TYPE_CREDIT_TID) {
					$balance_check->field_costs[LANGUAGE_NONE]['0']['value'] = $balance_amount - abs($check_anount);
			}
			else {
				if ($check_anount < 0) {
					$balance_check->field_costs[LANGUAGE_NONE]['0']['value'] = $balance_amount - abs($check_anount);
				}
				else {
					$balance_check->field_costs[LANGUAGE_NONE]['0']['value'] = $balance_amount + $check_anount;
				}
			}


			node_save($balance_check);
		}

	}
}

function salon_node_presave($node){
	global $user;

	if ($node->type == variable_get('bill_node_type', BILL_NODE_TYPE)) {
		$datetime_array = explode(' ', $node->field_date[LANGUAGE_NONE][0]['value']);
		$salon_tid = $node->field_salon[LANGUAGE_NONE][0]['tid'];
		$closed_days = views_get_view_result('all_closed_days', 'block_3', $salon_tid, $datetime_array[0]);

		if ($closed_days) {
			if (!user_access('administer site configuration', $user)) {
				$node->event_calendar_status[LANGUAGE_NONE][0]['tid'] = RED_STATUS_TID;
			}

			//delete all CLOSED_DAY nodes
//			$nodes = array();
//			foreach ($closed_days as $day_node) {
//				$nodes[$day_node->nid] = $day_node->nid;
//			}
//			node_delete_multiple($nodes);
		}
	}
	if ($node->type == variable_get('close_day_node_type', CLOSE_DAY_NODE_TYPE)) {

		$salon_tid = $node->field_salon[LANGUAGE_NONE][0]['tid'];
		$date = date('Y-m-d', strtotime($node->field_date[LANGUAGE_NONE][0]['value']));
		$hacked_days = views_get_view_result('all_closed_days', 'block_4', $salon_tid, $date);

		if ($hacked_days) {
			$nids = array();
			foreach ($hacked_days as $h_day) {
				$nids[] = $h_day->nid;
			}
			if ($nids) {
				// Get all nodes of 'page' type, populate the field with a value of '1'.
				$pages = db_query("SELECT nid, vid FROM {node} WHERE nid IN (:nids)", array(':nids' => $nids))->fetchAllAssoc('nid');
				foreach ($pages as $nid => $values) {
					$fields = array(
						'entity_type' => 'node',
						'bundle' => BILL_NODE_TYPE,
						'event_calendar_status_tid' => GREEN_STATUS_EVENT_TID,
					);
					undate_bill_node_status($values->nid, $fields);
				}
			}
		}
	}
}

function undate_bill_node_status($nid, $fields){

//	db_update('field_data_event_calendar_status')
//		->fields($fields)
//		->condition('entity_id', $nid)
//		->execute();
//	db_update('field_revision_event_calendar_status')
//		->fields($fields)
//		->condition('entity_id', $nid)
//		->execute();
}

/**
 * Implements hook_views_pre_view().
 */
function salon_views_pre_view(&$view, &$display_id, &$args) {
//	ini_set('xdebug.var_display_max_depth', 15);
//	echo "<pre>";
//	var_dump($view->name);
//	echo "</pre>";
//	die();
//	if ($view->name == 'test') {
//		$view->add_item($view->current_display, 'field', 'views', 'nothing', array(
//			'label' => 'My field',
//			'alter' => array('text' => 'asdad<input type="checkbox">'),
//			'element_class' => 'my-field',
//			'element_default_classes' => 0,
//		), 'my_field');
//	}
}

/**
 * Implements hook_menu().
 */
function salon_menu() {
	$items = array();

	$items['ajax/update_submission_status'] = array(
		'page callback' => 'nowlegal_common_ajax_update_submission_status',
		'access callback' => 'user_access',
		'access arguments' => array('administer site configuration'),
		'type' => MENU_CALLBACK,
	);

	return $items;
}

function nowlegal_common_ajax_update_submission_status(){
	if (isset($_REQUEST['status']) && $_REQUEST['status'] && isset($_REQUEST['sid']) && $_REQUEST['sid']) {
		$sid = (int)$_REQUEST['sid'];
		$status = $_REQUEST['status'] == 'true' ? 1 : 0;
		variable_set('lawyer_plan_status_sid_' . $sid, $status);

		print drupal_json_decode(array('success' => TRUE));
		die();
	}

	print drupal_json_decode(array('success' => FALSE));
	die();

}

function get_node_by_field($type = 'balance_check', $tid){
	$query = new EntityFieldQuery();

	$query->entityCondition('entity_type', 'node')
		->entityCondition('bundle', $type)
		->propertyCondition('status', NODE_PUBLISHED)
		->fieldCondition('field_salon', 'tid', $tid)
		->range(0, 1);

	$result = $query->execute();

	if (isset($result['node'])) {
		return key($result['node']);
	}
	return false;
}